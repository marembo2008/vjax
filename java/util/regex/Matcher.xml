<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Matcher class="java.util.regex.Matcher" ref-id="1063848416">
   <implements interface="java.util.regex.MatchResult"/>
   <extends class="java.lang.Object"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Object.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/util/regex/MatchResult.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/StringBuffer.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/util/regex/Matcher.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/String.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/CharSequence.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/util/regex/Pattern.xml"/>
   <constructors>
      <constructor/>
   </constructors>
   <fields>
      <parentPattern type="java.util.regex.Pattern"/>
      <groups type="[I"/>
      <from type="int"/>
      <to type="int"/>
      <lookbehindTo type="int"/>
      <text type="java.lang.CharSequence"/>
      <ENDANCHOR type="int" final="true" static-final="true"/>
      <NOANCHOR type="int" final="true" static-final="true"/>
      <acceptMode type="int"/>
      <first type="int"/>
      <last type="int"/>
      <oldLast type="int"/>
      <lastAppendPosition type="int"/>
      <locals type="[I"/>
      <hitEnd type="boolean"/>
      <requireEnd type="boolean"/>
      <transparentBounds type="boolean"/>
      <anchoringBounds type="boolean"/>
   </fields>
   <methods>
      <group return-type="java.lang.String" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </group>
      <group return-type="java.lang.String" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </group>
      <group return-type="java.lang.String" visibility="public"/>
      <toString return-type="java.lang.String" visibility="public" overrides="true"/>
      <end return-type="int" visibility="public"/>
      <end return-type="int" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </end>
      <charAt return-type="char">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </charAt>
      <start return-type="int" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </start>
      <start return-type="int" visibility="public"/>
      <matches return-type="boolean" visibility="public"/>
      <replaceFirst return-type="java.lang.String" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </replaceFirst>
      <replaceAll return-type="java.lang.String" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </replaceAll>
      <quoteReplacement return-type="java.lang.String" visibility="public" static-final="true">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </quoteReplacement>
      <match return-type="boolean">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </match>
      <find return-type="boolean" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </find>
      <find return-type="boolean" visibility="public"/>
      <reset return-type="java.util.regex.Matcher" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.CharSequence"/>
         </parameters>
      </reset>
      <reset return-type="java.util.regex.Matcher" visibility="public"/>
      <search return-type="boolean">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </search>
      <pattern return-type="java.util.regex.Pattern" visibility="public"/>
      <appendReplacement return-type="java.util.regex.Matcher" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.StringBuffer"/>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </appendReplacement>
      <appendTail return-type="java.lang.StringBuffer" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.StringBuffer"/>
         </parameters>
      </appendTail>
      <region return-type="java.util.regex.Matcher" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </region>
      <hitEnd return-type="boolean" visibility="public"/>
      <requireEnd return-type="boolean" visibility="public"/>
      <toMatchResult return-type="java.util.regex.MatchResult" visibility="public"/>
      <usePattern return-type="java.util.regex.Matcher" visibility="public">
         <parameters>
            <parameter parameter-type="java.util.regex.Pattern"/>
         </parameters>
      </usePattern>
      <groupCount return-type="int" visibility="public"/>
      <lookingAt return-type="boolean" visibility="public"/>
      <regionStart return-type="int" visibility="public"/>
      <regionEnd return-type="int" visibility="public"/>
      <hasTransparentBounds return-type="boolean" visibility="public"/>
      <useTransparentBounds return-type="java.util.regex.Matcher" visibility="public">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
      </useTransparentBounds>
      <hasAnchoringBounds return-type="boolean" visibility="public"/>
      <useAnchoringBounds return-type="java.util.regex.Matcher" visibility="public">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
      </useAnchoringBounds>
      <getTextLength return-type="int"/>
      <getSubSequence return-type="java.lang.CharSequence">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </getSubSequence>
   </methods>
</Matcher>