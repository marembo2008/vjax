<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<ReentrantLock class="java.util.concurrent.locks.ReentrantLock" ref-id="1336305343">
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/Serializable.xml"/>
   <implements interface="java.io.Serializable"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/util/concurrent/locks/Lock.xml"/>
   <implements interface="java.util.concurrent.locks.Lock"/>
   <extends class="java.lang.Object"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Object.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/util/Collection.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Thread.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/util/concurrent/locks/Condition.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/InterruptedException.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/util/concurrent/TimeUnit.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/String.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/util/concurrent/locks/ReentrantLock$Sync.xml"/>
   <constructors>
      <constructor visibility="public"/>
      <constructor visibility="public">
         <parameters>
            <parameter type="boolean"/>
         </parameters>
      </constructor>
   </constructors>
   <fields>
      <serialVersionUID type="long" visibility="private" final="true" static-final="true"/>
      <sync type="java.util.concurrent.locks.ReentrantLock$Sync" visibility="private" final="true"/>
   </fields>
   <methods>
      <lock return-type="void" visibility="public"/>
      <toString return-type="java.lang.String" visibility="public" overrides="true"/>
      <unlock return-type="void" visibility="public"/>
      <tryLock return-type="boolean" visibility="public"/>
      <tryLock return-type="boolean" visibility="public">
         <parameters>
            <parameter parameter-type="long"/>
            <parameter parameter-type="java.util.concurrent.TimeUnit"/>
         </parameters>
         <throws>
            <throwable throws="java.lang.InterruptedException"/>
         </throws>
      </tryLock>
      <newCondition return-type="java.util.concurrent.locks.Condition" visibility="public"/>
      <getHoldCount return-type="int" visibility="public"/>
      <isHeldByCurrentThread return-type="boolean" visibility="public"/>
      <isLocked return-type="boolean" visibility="public"/>
      <isFair return-type="boolean" visibility="public" final="true"/>
      <lockInterruptibly return-type="void" visibility="public">
         <throws>
            <throwable throws="java.lang.InterruptedException"/>
         </throws>
      </lockInterruptibly>
      <getOwner return-type="java.lang.Thread" visibility="protected"/>
      <hasQueuedThreads return-type="boolean" visibility="public" final="true"/>
      <hasQueuedThread return-type="boolean" visibility="public" final="true">
         <parameters>
            <parameter parameter-type="java.lang.Thread"/>
         </parameters>
      </hasQueuedThread>
      <getQueueLength return-type="int" visibility="public" final="true"/>
      <getQueuedThreads return-type="java.util.Collection" visibility="protected"/>
      <hasWaiters return-type="boolean" visibility="public">
         <parameters>
            <parameter parameter-type="java.util.concurrent.locks.Condition"/>
         </parameters>
      </hasWaiters>
      <getWaitQueueLength return-type="int" visibility="public">
         <parameters>
            <parameter parameter-type="java.util.concurrent.locks.Condition"/>
         </parameters>
      </getWaitQueueLength>
      <getWaitingThreads return-type="java.util.Collection" visibility="protected">
         <parameters>
            <parameter parameter-type="java.util.concurrent.locks.Condition"/>
         </parameters>
      </getWaitingThreads>
   </methods>
</ReentrantLock>