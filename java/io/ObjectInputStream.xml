<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<ObjectInputStream class="java.io.ObjectInputStream" ref-id="465453136">
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/ObjectStreamConstants.xml"/>
   <implements interface="java.io.ObjectStreamConstants"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/ObjectInput.xml"/>
   <implements interface="java.io.ObjectInput"/>
   <extends class="java.io.InputStream"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/ClassLoader.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/Externalizable.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Enum.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/InvalidObjectException.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/NotActiveException.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/ObjectInputValidation.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/ObjectInputStream$GetField.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/StreamCorruptedException.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/String.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/ObjectInputStream.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/ClassNotFoundException.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/ObjectStreamClass.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Class.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/SerialCallbackContext.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/ObjectInputStream$HandleTable.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/ObjectInputStream$ValidationList.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/ObjectInputStream$BlockDataInputStream.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/util/HashMap.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Object.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/SecurityException.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/IOException.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/InputStream.xml"/>
   <constructors>
      <constructor visibility="public">
         <parameters>
            <parameter type="java.io.InputStream"/>
         </parameters>
         <throws>
            <throwable type="java.io.IOException"/>
         </throws>
      </constructor>
      <constructor visibility="protected">
         <throws>
            <throwable type="java.io.IOException"/>
            <throwable type="java.lang.SecurityException"/>
         </throws>
      </constructor>
   </constructors>
   <fields>
      <NULL_HANDLE type="int" visibility="private" final="true" static-final="true"/>
      <unsharedMarker type="java.lang.Object" visibility="private" final="true" static-final="true"/>
      <primClasses type="java.util.HashMap" visibility="private" final="true" static-final="true"/>
      <bin type="java.io.ObjectInputStream$BlockDataInputStream" visibility="private" final="true"/>
      <vlist type="java.io.ObjectInputStream$ValidationList" visibility="private" final="true"/>
      <depth type="int" visibility="private"/>
      <closed type="boolean" visibility="private"/>
      <handles type="java.io.ObjectInputStream$HandleTable" visibility="private" final="true"/>
      <passHandle type="int" visibility="private"/>
      <defaultDataEnd type="boolean" visibility="private"/>
      <primVals type="[B" visibility="private"/>
      <enableOverride type="boolean" visibility="private" final="true"/>
      <enableResolve type="boolean" visibility="private"/>
      <curContext type="java.io.SerialCallbackContext" visibility="private"/>
   </fields>
   <methods>
      <clear return-type="void" visibility="private"/>
      <resolveClass return-type="java.lang.Class" visibility="protected">
         <parameters>
            <parameter parameter-type="java.io.ObjectStreamClass"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
            <throwable throws="java.lang.ClassNotFoundException"/>
         </throws>
      </resolveClass>
      <access_000 escapeSequence="6:$" return-type="int" static-final="true">
         <parameters>
            <parameter parameter-type="java.io.ObjectInputStream"/>
         </parameters>
      </access_000>
      <access_200 escapeSequence="6:$" return-type="java.io.ObjectInputStream$BlockDataInputStream" static-final="true">
         <parameters>
            <parameter parameter-type="java.io.ObjectInputStream"/>
         </parameters>
      </access_200>
      <readObject return-type="java.lang.Object" visibility="public" final="true">
         <throws>
            <throwable throws="java.io.IOException"/>
            <throwable throws="java.lang.ClassNotFoundException"/>
         </throws>
      </readObject>
      <defaultReadObject return-type="void" visibility="public">
         <throws>
            <throwable throws="java.io.IOException"/>
            <throwable throws="java.lang.ClassNotFoundException"/>
         </throws>
      </defaultReadObject>
      <access_100 escapeSequence="6:$" return-type="java.io.ObjectInputStream$HandleTable" static-final="true">
         <parameters>
            <parameter parameter-type="java.io.ObjectInputStream"/>
         </parameters>
      </access_100>
      <access_300 escapeSequence="6:$" return-type="java.lang.Object" static-final="true">
         <parameters>
            <parameter parameter-type="java.io.ObjectInputStream"/>
            <parameter parameter-type="boolean"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </access_300>
      <auditSubclass return-type="boolean" visibility="private" static-final="true">
         <parameters>
            <parameter parameter-type="java.lang.Class"/>
         </parameters>
      </auditSubclass>
      <readLine return-type="java.lang.String" visibility="public">
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readLine>
      <close return-type="void" visibility="public" overrides="true">
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </close>
      <access_500 escapeSequence="6:$" return-type="boolean" static-final="true">
         <parameters>
            <parameter parameter-type="java.io.ObjectInputStream"/>
         </parameters>
      </access_500>
      <access_600 escapeSequence="6:$" return-type="void" static-final="true">
         <parameters>
            <parameter parameter-type="java.io.ObjectInputStream"/>
         </parameters>
         <throws>
            <throwable throws="java.io.StreamCorruptedException"/>
         </throws>
      </access_600>
      <readInt return-type="int" visibility="public">
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readInt>
      <access_002 escapeSequence="6:$" return-type="int" static-final="true">
         <parameters>
            <parameter parameter-type="java.io.ObjectInputStream"/>
            <parameter parameter-type="int"/>
         </parameters>
      </access_002>
      <readFields return-type="java.io.ObjectInputStream$GetField" visibility="public">
         <throws>
            <throwable throws="java.io.IOException"/>
            <throwable throws="java.lang.ClassNotFoundException"/>
         </throws>
      </readFields>
      <read return-type="int" visibility="public" overrides="true">
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </read>
      <read return-type="int" visibility="public" overrides="true">
         <parameters>
            <parameter parameter-type="[B"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </read>
      <available return-type="int" visibility="public" overrides="true">
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </available>
      <readChar return-type="char" visibility="public">
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readChar>
      <access_700 escapeSequence="6:$" return-type="void" static-final="true">
         <parameters>
            <parameter parameter-type="[B"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="[F"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </access_700>
      <access_800 escapeSequence="6:$" return-type="void" static-final="true">
         <parameters>
            <parameter parameter-type="[B"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="[D"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </access_800>
      <readUTF return-type="java.lang.String" visibility="public">
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readUTF>
      <readFully return-type="void" visibility="public">
         <parameters>
            <parameter parameter-type="[B"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readFully>
      <readFully return-type="void" visibility="public">
         <parameters>
            <parameter parameter-type="[B"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readFully>
      <readFloat return-type="float" visibility="public">
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readFloat>
      <readObjectOverride return-type="java.lang.Object" visibility="protected">
         <throws>
            <throwable throws="java.io.IOException"/>
            <throwable throws="java.lang.ClassNotFoundException"/>
         </throws>
      </readObjectOverride>
      <readUnshared return-type="java.lang.Object" visibility="public">
         <throws>
            <throwable throws="java.io.IOException"/>
            <throwable throws="java.lang.ClassNotFoundException"/>
         </throws>
      </readUnshared>
      <registerValidation return-type="void" visibility="public">
         <parameters>
            <parameter parameter-type="java.io.ObjectInputValidation"/>
            <parameter parameter-type="int"/>
         </parameters>
         <throws>
            <throwable throws="java.io.NotActiveException"/>
            <throwable throws="java.io.InvalidObjectException"/>
         </throws>
      </registerValidation>
      <resolveProxyClass return-type="java.lang.Class" visibility="protected">
         <parameters>
            <parameter parameter-type="[Ljava.lang.String;"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
            <throwable throws="java.lang.ClassNotFoundException"/>
         </throws>
      </resolveProxyClass>
      <resolveObject return-type="java.lang.Object" visibility="protected">
         <parameters>
            <parameter parameter-type="java.lang.Object"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </resolveObject>
      <enableResolveObject return-type="boolean" visibility="protected">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
         <throws>
            <throwable throws="java.lang.SecurityException"/>
         </throws>
      </enableResolveObject>
      <readStreamHeader return-type="void" visibility="protected">
         <throws>
            <throwable throws="java.io.IOException"/>
            <throwable throws="java.io.StreamCorruptedException"/>
         </throws>
      </readStreamHeader>
      <readClassDescriptor return-type="java.io.ObjectStreamClass" visibility="protected">
         <throws>
            <throwable throws="java.io.IOException"/>
            <throwable throws="java.lang.ClassNotFoundException"/>
         </throws>
      </readClassDescriptor>
      <readBoolean return-type="boolean" visibility="public">
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readBoolean>
      <readByte return-type="byte" visibility="public">
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readByte>
      <readUnsignedByte return-type="int" visibility="public">
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readUnsignedByte>
      <readShort return-type="short" visibility="public">
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readShort>
      <readUnsignedShort return-type="int" visibility="public">
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readUnsignedShort>
      <readLong return-type="long" visibility="public">
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readLong>
      <readDouble return-type="double" visibility="public">
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readDouble>
      <skipBytes return-type="int" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </skipBytes>
      <verifySubclass return-type="void" visibility="private"/>
      <readObject0 return-type="java.lang.Object" visibility="private">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readObject0>
      <checkResolve return-type="java.lang.Object" visibility="private">
         <parameters>
            <parameter parameter-type="java.lang.Object"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </checkResolve>
      <readTypeString return-type="java.lang.String">
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readTypeString>
      <readNull return-type="java.lang.Object" visibility="private">
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readNull>
      <readHandle return-type="java.lang.Object" visibility="private">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readHandle>
      <readClass return-type="java.lang.Class" visibility="private">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readClass>
      <readClassDesc return-type="java.io.ObjectStreamClass" visibility="private">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readClassDesc>
      <isCustomSubclass return-type="boolean" visibility="private"/>
      <readProxyDesc return-type="java.io.ObjectStreamClass" visibility="private">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readProxyDesc>
      <readNonProxyDesc return-type="java.io.ObjectStreamClass" visibility="private">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readNonProxyDesc>
      <readString return-type="java.lang.String" visibility="private">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readString>
      <readArray return-type="java.lang.Object" visibility="private">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readArray>
      <readEnum return-type="java.lang.Enum" visibility="private">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readEnum>
      <readOrdinaryObject return-type="java.lang.Object" visibility="private">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readOrdinaryObject>
      <readExternalData return-type="void" visibility="private">
         <parameters>
            <parameter parameter-type="java.io.Externalizable"/>
            <parameter parameter-type="java.io.ObjectStreamClass"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readExternalData>
      <readSerialData return-type="void" visibility="private">
         <parameters>
            <parameter parameter-type="java.lang.Object"/>
            <parameter parameter-type="java.io.ObjectStreamClass"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readSerialData>
      <skipCustomData return-type="void" visibility="private">
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </skipCustomData>
      <defaultReadFields return-type="void" visibility="private">
         <parameters>
            <parameter parameter-type="java.lang.Object"/>
            <parameter parameter-type="java.io.ObjectStreamClass"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </defaultReadFields>
      <readFatalException return-type="java.io.IOException" visibility="private">
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readFatalException>
      <handleReset return-type="void" visibility="private">
         <throws>
            <throwable throws="java.io.StreamCorruptedException"/>
         </throws>
      </handleReset>
      <bytesToFloats return-type="void" visibility="private" static-final="true" native="true">
         <parameters>
            <parameter parameter-type="[B"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="[F"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </bytesToFloats>
      <bytesToDoubles return-type="void" visibility="private" static-final="true" native="true">
         <parameters>
            <parameter parameter-type="[B"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="[D"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </bytesToDoubles>
      <latestUserDefinedLoader return-type="java.lang.ClassLoader" visibility="private" static-final="true" native="true"/>
      <cloneArray return-type="java.lang.Object" visibility="private" static-final="true">
         <parameters>
            <parameter parameter-type="java.lang.Object"/>
         </parameters>
      </cloneArray>
   </methods>
</ObjectInputStream>