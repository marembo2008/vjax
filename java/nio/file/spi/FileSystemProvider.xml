<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<FileSystemProvider class="java.nio.file.spi.FileSystemProvider" ref-id="1125098680" abstract="true">
   <extends class="java.lang.Object"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/file/attribute/BasicFileAttributes.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/file/LinkOption.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Class.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/file/attribute/FileAttributeView.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/file/FileStore.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/channels/SeekableByteChannel.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/util/concurrent/ExecutorService.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/channels/AsynchronousFileChannel.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/util/Set.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/channels/FileChannel.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/OutputStream.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/file/OpenOption.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/InputStream.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/util/Map.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/file/DirectoryStream$Filter.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/file/DirectoryStream.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/file/FileSystem.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/file/attribute/FileAttribute.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/String.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/net/URI.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/file/CopyOption.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/IOException.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/file/AccessMode.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/file/Path.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/util/List.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Object.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Void.xml"/>
   <constructors>
      <constructor visibility="protected"/>
      <constructor visibility="private">
         <parameters>
            <parameter type="java.lang.Void"/>
         </parameters>
      </constructor>
   </constructors>
   <fields>
      <lock type="java.lang.Object" visibility="private" final="true" static-final="true"/>
      <installedProviders type="java.util.List" visibility="private" volatile="true" static-final="true"/>
      <loadingProviders type="boolean" visibility="private" static-final="true"/>
   </fields>
   <methods>
      <access_000 escapeSequence="6:$" return-type="java.util.List" static-final="true"/>
      <checkPermission return-type="java.lang.Void" visibility="private" static-final="true"/>
      <checkAccess return-type="void" visibility="public" transient="true" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="[Ljava.nio.file.AccessMode;"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </checkAccess>
      <copy return-type="void" visibility="public" transient="true" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="[Ljava.nio.file.CopyOption;"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </copy>
      <delete return-type="void" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </delete>
      <getPath return-type="java.nio.file.Path" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.net.URI"/>
         </parameters>
      </getPath>
      <isHidden return-type="boolean" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </isHidden>
      <getScheme return-type="java.lang.String" visibility="public" abstract="true"/>
      <createDirectory return-type="void" visibility="public" transient="true" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="[Ljava.nio.file.attribute.FileAttribute;"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </createDirectory>
      <getFileSystem return-type="java.nio.file.FileSystem" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.net.URI"/>
         </parameters>
      </getFileSystem>
      <newDirectoryStream return-type="java.nio.file.DirectoryStream" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="java.nio.file.DirectoryStream$Filter"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </newDirectoryStream>
      <installedProviders return-type="java.util.List" visibility="public" static-final="true"/>
      <loadInstalledProviders return-type="java.util.List" visibility="private" static-final="true"/>
      <newFileSystem return-type="java.nio.file.FileSystem" visibility="public">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="java.util.Map"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </newFileSystem>
      <newFileSystem return-type="java.nio.file.FileSystem" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.net.URI"/>
            <parameter parameter-type="java.util.Map"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </newFileSystem>
      <newInputStream return-type="java.io.InputStream" visibility="public" transient="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="[Ljava.nio.file.OpenOption;"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </newInputStream>
      <newOutputStream return-type="java.io.OutputStream" visibility="public" transient="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="[Ljava.nio.file.OpenOption;"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </newOutputStream>
      <newFileChannel return-type="java.nio.channels.FileChannel" visibility="public" transient="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="java.util.Set"/>
            <parameter parameter-type="[Ljava.nio.file.attribute.FileAttribute;"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </newFileChannel>
      <newAsynchronousFileChannel return-type="java.nio.channels.AsynchronousFileChannel" visibility="public" transient="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="java.util.Set"/>
            <parameter parameter-type="java.util.concurrent.ExecutorService"/>
            <parameter parameter-type="[Ljava.nio.file.attribute.FileAttribute;"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </newAsynchronousFileChannel>
      <newByteChannel return-type="java.nio.channels.SeekableByteChannel" visibility="public" transient="true" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="java.util.Set"/>
            <parameter parameter-type="[Ljava.nio.file.attribute.FileAttribute;"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </newByteChannel>
      <createSymbolicLink return-type="void" visibility="public" transient="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="[Ljava.nio.file.attribute.FileAttribute;"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </createSymbolicLink>
      <createLink return-type="void" visibility="public">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="java.nio.file.Path"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </createLink>
      <deleteIfExists return-type="boolean" visibility="public">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </deleteIfExists>
      <readSymbolicLink return-type="java.nio.file.Path" visibility="public">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readSymbolicLink>
      <move return-type="void" visibility="public" transient="true" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="[Ljava.nio.file.CopyOption;"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </move>
      <isSameFile return-type="boolean" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="java.nio.file.Path"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </isSameFile>
      <getFileStore return-type="java.nio.file.FileStore" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </getFileStore>
      <getFileAttributeView return-type="java.nio.file.attribute.FileAttributeView" visibility="public" transient="true" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="java.lang.Class"/>
            <parameter parameter-type="[Ljava.nio.file.LinkOption;"/>
         </parameters>
      </getFileAttributeView>
      <readAttributes return-type="java.nio.file.attribute.BasicFileAttributes" visibility="public" transient="true" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="java.lang.Class"/>
            <parameter parameter-type="[Ljava.nio.file.LinkOption;"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readAttributes>
      <readAttributes return-type="java.util.Map" visibility="public" transient="true" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="java.lang.String"/>
            <parameter parameter-type="[Ljava.nio.file.LinkOption;"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </readAttributes>
      <setAttribute return-type="void" visibility="public" transient="true" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
            <parameter parameter-type="java.lang.String"/>
            <parameter parameter-type="java.lang.Object"/>
            <parameter parameter-type="[Ljava.nio.file.LinkOption;"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </setAttribute>
   </methods>
</FileSystemProvider>