<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Path class="java.nio.file.Path" ref-id="1944286174" interface="true">
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/file/Watchable.xml"/>
   <implements interface="java.nio.file.Watchable"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Iterable.xml"/>
   <implements interface="java.lang.Iterable"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Comparable.xml"/>
   <implements interface="java.lang.Comparable"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/File.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/net/URI.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/file/FileSystem.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/util/Iterator.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/file/Path.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/IOException.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/file/WatchService.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/file/WatchKey.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/String.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Object.xml"/>
   <methods>
      <equals return-type="boolean" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.lang.Object"/>
         </parameters>
      </equals>
      <toString return-type="java.lang.String" visibility="public" abstract="true"/>
      <register return-type="java.nio.file.WatchKey" visibility="public" transient="true" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.WatchService"/>
            <parameter parameter-type="[Ljava.nio.file.WatchEvent$Kind;"/>
            <parameter parameter-type="[Ljava.nio.file.WatchEvent$Modifier;"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </register>
      <register return-type="java.nio.file.WatchKey" visibility="public" transient="true" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.WatchService"/>
            <parameter parameter-type="[Ljava.nio.file.WatchEvent$Kind;"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </register>
      <hashCode return-type="int" visibility="public" abstract="true"/>
      <compareTo return-type="int" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
         </parameters>
      </compareTo>
      <getName return-type="java.nio.file.Path" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </getName>
      <startsWith return-type="boolean" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </startsWith>
      <startsWith return-type="boolean" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
         </parameters>
      </startsWith>
      <endsWith return-type="boolean" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </endsWith>
      <endsWith return-type="boolean" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
         </parameters>
      </endsWith>
      <resolve return-type="java.nio.file.Path" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
         </parameters>
      </resolve>
      <resolve return-type="java.nio.file.Path" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </resolve>
      <getParent return-type="java.nio.file.Path" visibility="public" abstract="true"/>
      <isAbsolute return-type="boolean" visibility="public" abstract="true"/>
      <iterator return-type="java.util.Iterator" visibility="public" abstract="true"/>
      <getFileName return-type="java.nio.file.Path" visibility="public" abstract="true"/>
      <normalize return-type="java.nio.file.Path" visibility="public" abstract="true"/>
      <getFileSystem return-type="java.nio.file.FileSystem" visibility="public" abstract="true"/>
      <relativize return-type="java.nio.file.Path" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
         </parameters>
      </relativize>
      <subpath return-type="java.nio.file.Path" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </subpath>
      <getRoot return-type="java.nio.file.Path" visibility="public" abstract="true"/>
      <getNameCount return-type="int" visibility="public" abstract="true"/>
      <resolveSibling return-type="java.nio.file.Path" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.nio.file.Path"/>
         </parameters>
      </resolveSibling>
      <resolveSibling return-type="java.nio.file.Path" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </resolveSibling>
      <toUri return-type="java.net.URI" visibility="public" abstract="true"/>
      <toAbsolutePath return-type="java.nio.file.Path" visibility="public" abstract="true"/>
      <toRealPath return-type="java.nio.file.Path" visibility="public" transient="true" abstract="true">
         <parameters>
            <parameter parameter-type="[Ljava.nio.file.LinkOption;"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </toRealPath>
      <toFile return-type="java.io.File" visibility="public" abstract="true"/>
   </methods>
</Path>