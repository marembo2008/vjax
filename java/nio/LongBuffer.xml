<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<LongBuffer class="java.nio.LongBuffer" ref-id="1706023867" abstract="true">
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Comparable.xml"/>
   <implements interface="java.lang.Comparable"/>
   <extends class="java.nio.Buffer"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/Buffer.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/ByteOrder.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/String.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Object.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/LongBuffer.xml"/>
   <constructors>
      <constructor>
         <parameters>
            <parameter type="int"/>
            <parameter type="int"/>
            <parameter type="int"/>
            <parameter type="int"/>
            <parameter type="[J"/>
            <parameter type="int"/>
         </parameters>
      </constructor>
      <constructor>
         <parameters>
            <parameter type="int"/>
            <parameter type="int"/>
            <parameter type="int"/>
            <parameter type="int"/>
         </parameters>
      </constructor>
   </constructors>
   <fields>
      <hb type="[J" final="true"/>
      <offset type="int" final="true"/>
      <isReadOnly type="boolean"/>
   </fields>
   <methods>
      <get return-type="java.nio.LongBuffer" visibility="public">
         <parameters>
            <parameter parameter-type="[J"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </get>
      <get return-type="java.nio.LongBuffer" visibility="public">
         <parameters>
            <parameter parameter-type="[J"/>
         </parameters>
      </get>
      <get return-type="long" visibility="public" abstract="true"/>
      <get return-type="long" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </get>
      <put return-type="java.nio.LongBuffer" visibility="public" final="true">
         <parameters>
            <parameter parameter-type="[J"/>
         </parameters>
      </put>
      <put return-type="java.nio.LongBuffer" visibility="public">
         <parameters>
            <parameter parameter-type="[J"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </put>
      <put return-type="java.nio.LongBuffer" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="long"/>
         </parameters>
      </put>
      <put return-type="java.nio.LongBuffer" visibility="public">
         <parameters>
            <parameter parameter-type="java.nio.LongBuffer"/>
         </parameters>
      </put>
      <put return-type="java.nio.LongBuffer" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="long"/>
         </parameters>
      </put>
      <equals return-type="boolean" visibility="public" overrides="true">
         <parameters>
            <parameter parameter-type="java.lang.Object"/>
         </parameters>
      </equals>
      <equals return-type="boolean" visibility="private" static-final="true">
         <parameters>
            <parameter parameter-type="long"/>
            <parameter parameter-type="long"/>
         </parameters>
      </equals>
      <toString return-type="java.lang.String" visibility="public" overrides="true"/>
      <hashCode return-type="int" visibility="public" overrides="true"/>
      <compareTo return-type="int" visibility="public" volatile="true">
         <parameters>
            <parameter parameter-type="java.lang.Object"/>
         </parameters>
      </compareTo>
      <compareTo return-type="int" visibility="public">
         <parameters>
            <parameter parameter-type="java.nio.LongBuffer"/>
         </parameters>
      </compareTo>
      <compare return-type="int" visibility="private" static-final="true">
         <parameters>
            <parameter parameter-type="long"/>
            <parameter parameter-type="long"/>
         </parameters>
      </compare>
      <isDirect return-type="boolean" visibility="public" abstract="true" overrides="true"/>
      <hasArray return-type="boolean" visibility="public" final="true" overrides="true"/>
      <array return-type="[J" visibility="public" final="true" overrides="true"/>
      <array return-type="java.lang.Object" visibility="public" volatile="true" overrides="true"/>
      <arrayOffset return-type="int" visibility="public" final="true" overrides="true"/>
      <wrap return-type="java.nio.LongBuffer" visibility="public" static-final="true">
         <parameters>
            <parameter parameter-type="[J"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </wrap>
      <wrap return-type="java.nio.LongBuffer" visibility="public" static-final="true">
         <parameters>
            <parameter parameter-type="[J"/>
         </parameters>
      </wrap>
      <allocate return-type="java.nio.LongBuffer" visibility="public" static-final="true">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </allocate>
      <duplicate return-type="java.nio.LongBuffer" visibility="public" abstract="true"/>
      <slice return-type="java.nio.LongBuffer" visibility="public" abstract="true"/>
      <asReadOnlyBuffer return-type="java.nio.LongBuffer" visibility="public" abstract="true"/>
      <compact return-type="java.nio.LongBuffer" visibility="public" abstract="true"/>
      <order return-type="java.nio.ByteOrder" visibility="public" abstract="true"/>
   </methods>
</LongBuffer>