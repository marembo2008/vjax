<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<ByteBuffer class="java.nio.ByteBuffer" ref-id="2000755504" abstract="true">
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Comparable.xml"/>
   <implements interface="java.lang.Comparable"/>
   <extends class="java.nio.Buffer"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/Buffer.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/DoubleBuffer.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/FloatBuffer.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/LongBuffer.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/IntBuffer.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/ShortBuffer.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/CharBuffer.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/ByteOrder.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/String.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Object.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/nio/ByteBuffer.xml"/>
   <constructors>
      <constructor>
         <parameters>
            <parameter type="int"/>
            <parameter type="int"/>
            <parameter type="int"/>
            <parameter type="int"/>
            <parameter type="[B"/>
            <parameter type="int"/>
         </parameters>
      </constructor>
      <constructor>
         <parameters>
            <parameter type="int"/>
            <parameter type="int"/>
            <parameter type="int"/>
            <parameter type="int"/>
         </parameters>
      </constructor>
   </constructors>
   <fields>
      <hb type="[B" final="true"/>
      <offset type="int" final="true"/>
      <isReadOnly type="boolean"/>
      <bigEndian type="boolean"/>
      <nativeByteOrder type="boolean"/>
   </fields>
   <methods>
      <get return-type="byte" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </get>
      <get return-type="java.nio.ByteBuffer" visibility="public">
         <parameters>
            <parameter parameter-type="[B"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </get>
      <get return-type="byte" visibility="public" abstract="true"/>
      <get return-type="java.nio.ByteBuffer" visibility="public">
         <parameters>
            <parameter parameter-type="[B"/>
         </parameters>
      </get>
      <put return-type="java.nio.ByteBuffer" visibility="public">
         <parameters>
            <parameter parameter-type="[B"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </put>
      <put return-type="java.nio.ByteBuffer" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="byte"/>
         </parameters>
      </put>
      <put return-type="java.nio.ByteBuffer" visibility="public">
         <parameters>
            <parameter parameter-type="java.nio.ByteBuffer"/>
         </parameters>
      </put>
      <put return-type="java.nio.ByteBuffer" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="byte"/>
         </parameters>
      </put>
      <put return-type="java.nio.ByteBuffer" visibility="public" final="true">
         <parameters>
            <parameter parameter-type="[B"/>
         </parameters>
      </put>
      <equals return-type="boolean" visibility="private" static-final="true">
         <parameters>
            <parameter parameter-type="byte"/>
            <parameter parameter-type="byte"/>
         </parameters>
      </equals>
      <equals return-type="boolean" visibility="public" overrides="true">
         <parameters>
            <parameter parameter-type="java.lang.Object"/>
         </parameters>
      </equals>
      <toString return-type="java.lang.String" visibility="public" overrides="true"/>
      <hashCode return-type="int" visibility="public" overrides="true"/>
      <compareTo return-type="int" visibility="public" volatile="true">
         <parameters>
            <parameter parameter-type="java.lang.Object"/>
         </parameters>
      </compareTo>
      <compareTo return-type="int" visibility="public">
         <parameters>
            <parameter parameter-type="java.nio.ByteBuffer"/>
         </parameters>
      </compareTo>
      <getShort return-type="short" visibility="public" abstract="true"/>
      <getShort return-type="short" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </getShort>
      <putShort return-type="java.nio.ByteBuffer" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="short"/>
         </parameters>
      </putShort>
      <putShort return-type="java.nio.ByteBuffer" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="short"/>
         </parameters>
      </putShort>
      <getChar return-type="char" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </getChar>
      <getChar return-type="char" visibility="public" abstract="true"/>
      <putChar return-type="java.nio.ByteBuffer" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="char"/>
         </parameters>
      </putChar>
      <putChar return-type="java.nio.ByteBuffer" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="char"/>
         </parameters>
      </putChar>
      <getInt return-type="int" visibility="public" abstract="true"/>
      <getInt return-type="int" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </getInt>
      <putInt return-type="java.nio.ByteBuffer" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </putInt>
      <putInt return-type="java.nio.ByteBuffer" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </putInt>
      <getLong return-type="long" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </getLong>
      <getLong return-type="long" visibility="public" abstract="true"/>
      <putLong return-type="java.nio.ByteBuffer" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="long"/>
         </parameters>
      </putLong>
      <putLong return-type="java.nio.ByteBuffer" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="long"/>
         </parameters>
      </putLong>
      <getFloat return-type="float" visibility="public" abstract="true"/>
      <getFloat return-type="float" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </getFloat>
      <putFloat return-type="java.nio.ByteBuffer" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="float"/>
         </parameters>
      </putFloat>
      <putFloat return-type="java.nio.ByteBuffer" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="float"/>
         </parameters>
      </putFloat>
      <getDouble return-type="double" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </getDouble>
      <getDouble return-type="double" visibility="public" abstract="true"/>
      <putDouble return-type="java.nio.ByteBuffer" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="double"/>
         </parameters>
      </putDouble>
      <putDouble return-type="java.nio.ByteBuffer" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="double"/>
         </parameters>
      </putDouble>
      <compare return-type="int" visibility="private" static-final="true">
         <parameters>
            <parameter parameter-type="byte"/>
            <parameter parameter-type="byte"/>
         </parameters>
      </compare>
      <isDirect return-type="boolean" visibility="public" abstract="true" overrides="true"/>
      <hasArray return-type="boolean" visibility="public" final="true" overrides="true"/>
      <array return-type="java.lang.Object" visibility="public" volatile="true" overrides="true"/>
      <array return-type="[B" visibility="public" final="true" overrides="true"/>
      <arrayOffset return-type="int" visibility="public" final="true" overrides="true"/>
      <wrap return-type="java.nio.ByteBuffer" visibility="public" static-final="true">
         <parameters>
            <parameter parameter-type="[B"/>
         </parameters>
      </wrap>
      <wrap return-type="java.nio.ByteBuffer" visibility="public" static-final="true">
         <parameters>
            <parameter parameter-type="[B"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </wrap>
      <allocate return-type="java.nio.ByteBuffer" visibility="public" static-final="true">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </allocate>
      <duplicate return-type="java.nio.ByteBuffer" visibility="public" abstract="true"/>
      <allocateDirect return-type="java.nio.ByteBuffer" visibility="public" static-final="true">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </allocateDirect>
      <slice return-type="java.nio.ByteBuffer" visibility="public" abstract="true"/>
      <asReadOnlyBuffer return-type="java.nio.ByteBuffer" visibility="public" abstract="true"/>
      <compact return-type="java.nio.ByteBuffer" visibility="public" abstract="true"/>
      <order return-type="java.nio.ByteBuffer" visibility="public" final="true">
         <parameters>
            <parameter parameter-type="java.nio.ByteOrder"/>
         </parameters>
      </order>
      <order return-type="java.nio.ByteOrder" visibility="public" final="true"/>
      <_get return-type="byte" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </_get>
      <_put return-type="void" abstract="true">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="byte"/>
         </parameters>
      </_put>
      <asCharBuffer return-type="java.nio.CharBuffer" visibility="public" abstract="true"/>
      <asShortBuffer return-type="java.nio.ShortBuffer" visibility="public" abstract="true"/>
      <asIntBuffer return-type="java.nio.IntBuffer" visibility="public" abstract="true"/>
      <asLongBuffer return-type="java.nio.LongBuffer" visibility="public" abstract="true"/>
      <asFloatBuffer return-type="java.nio.FloatBuffer" visibility="public" abstract="true"/>
      <asDoubleBuffer return-type="java.nio.DoubleBuffer" visibility="public" abstract="true"/>
   </methods>
</ByteBuffer>