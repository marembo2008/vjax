<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Format class="java.text.Format" ref-id="134521223" abstract="true">
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Cloneable.xml"/>
   <implements interface="java.lang.Cloneable"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/Serializable.xml"/>
   <implements interface="java.io.Serializable"/>
   <extends class="java.lang.Object"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/text/AttributedCharacterIterator$Attribute.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/text/ParsePosition.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/text/ParseException.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/text/AttributedCharacterIterator.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/text/FieldPosition.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/StringBuffer.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/String.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Object.xml"/>
   <constructors>
      <constructor visibility="protected"/>
   </constructors>
   <fields>
      <serialVersionUID type="long" visibility="private" final="true" static-final="true"/>
   </fields>
   <methods>
      <clone return-type="java.lang.Object" visibility="public"/>
      <format return-type="java.lang.String" visibility="public" final="true">
         <parameters>
            <parameter parameter-type="java.lang.Object"/>
         </parameters>
      </format>
      <format return-type="java.lang.StringBuffer" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.lang.Object"/>
            <parameter parameter-type="java.lang.StringBuffer"/>
            <parameter parameter-type="java.text.FieldPosition"/>
         </parameters>
      </format>
      <formatToCharacterIterator return-type="java.text.AttributedCharacterIterator" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.Object"/>
         </parameters>
      </formatToCharacterIterator>
      <parseObject return-type="java.lang.Object" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
         <throws>
            <throwable throws="java.text.ParseException"/>
         </throws>
      </parseObject>
      <parseObject return-type="java.lang.Object" visibility="public" abstract="true">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
            <parameter parameter-type="java.text.ParsePosition"/>
         </parameters>
      </parseObject>
      <createAttributedCharacterIterator return-type="java.text.AttributedCharacterIterator">
         <parameters>
            <parameter parameter-type="java.text.AttributedCharacterIterator"/>
            <parameter parameter-type="java.text.AttributedCharacterIterator$Attribute"/>
            <parameter parameter-type="java.lang.Object"/>
         </parameters>
      </createAttributedCharacterIterator>
      <createAttributedCharacterIterator return-type="java.text.AttributedCharacterIterator">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
            <parameter parameter-type="java.text.AttributedCharacterIterator$Attribute"/>
            <parameter parameter-type="java.lang.Object"/>
         </parameters>
      </createAttributedCharacterIterator>
      <createAttributedCharacterIterator return-type="java.text.AttributedCharacterIterator">
         <parameters>
            <parameter parameter-type="[Ljava.text.AttributedCharacterIterator;"/>
         </parameters>
      </createAttributedCharacterIterator>
      <createAttributedCharacterIterator return-type="java.text.AttributedCharacterIterator">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </createAttributedCharacterIterator>
   </methods>
</Format>