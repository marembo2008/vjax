<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Thread class="java.lang.Thread" ref-id="1007132236">
   <implements interface="java.lang.Runnable"/>
   <extends class="java.lang.Object"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/util/concurrent/ConcurrentMap.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/ref/ReferenceQueue.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Thread$State.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Class.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/util/Map.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/InterruptedException.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/CloneNotSupportedException.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Throwable.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Thread$UncaughtExceptionHandler.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/RuntimePermission.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Object.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/ThreadLocal$ThreadLocalMap.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/security/AccessControlContext.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/ClassLoader.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Thread.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Runnable.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/ThreadGroup.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/String.xml"/>
   <constructors>
      <constructor visibility="public">
         <parameters>
            <parameter type="java.lang.String"/>
         </parameters>
      </constructor>
      <constructor visibility="public">
         <parameters>
            <parameter type="java.lang.ThreadGroup"/>
            <parameter type="java.lang.Runnable"/>
         </parameters>
      </constructor>
      <constructor visibility="public">
         <parameters>
            <parameter type="java.lang.Runnable"/>
         </parameters>
      </constructor>
      <constructor visibility="public"/>
      <constructor visibility="public">
         <parameters>
            <parameter type="java.lang.ThreadGroup"/>
            <parameter type="java.lang.Runnable"/>
            <parameter type="java.lang.String"/>
            <parameter type="long"/>
         </parameters>
      </constructor>
      <constructor visibility="public">
         <parameters>
            <parameter type="java.lang.ThreadGroup"/>
            <parameter type="java.lang.Runnable"/>
            <parameter type="java.lang.String"/>
         </parameters>
      </constructor>
      <constructor visibility="public">
         <parameters>
            <parameter type="java.lang.Runnable"/>
            <parameter type="java.lang.String"/>
         </parameters>
      </constructor>
      <constructor visibility="public">
         <parameters>
            <parameter type="java.lang.ThreadGroup"/>
            <parameter type="java.lang.String"/>
         </parameters>
      </constructor>
   </constructors>
   <fields>
      <name type="[C" visibility="private"/>
      <priority type="int" visibility="private"/>
      <threadQ type="java.lang.Thread" visibility="private"/>
      <eetop type="long" visibility="private"/>
      <single_step type="boolean" visibility="private"/>
      <daemon type="boolean" visibility="private"/>
      <stillborn type="boolean" visibility="private"/>
      <target type="java.lang.Runnable" visibility="private"/>
      <group type="java.lang.ThreadGroup" visibility="private"/>
      <contextClassLoader type="java.lang.ClassLoader" visibility="private"/>
      <inheritedAccessControlContext type="java.security.AccessControlContext" visibility="private"/>
      <threadInitNumber type="int" visibility="private" static-final="true"/>
      <threadLocals type="java.lang.ThreadLocal$ThreadLocalMap"/>
      <inheritableThreadLocals type="java.lang.ThreadLocal$ThreadLocalMap"/>
      <stackSize type="long" visibility="private"/>
      <nativeParkEventPointer type="long" visibility="private"/>
      <tid type="long" visibility="private"/>
      <threadSeqNumber type="long" visibility="private" static-final="true"/>
      <threadStatus type="int" visibility="private" volatile="true"/>
      <parkBlocker type="java.lang.Object" volatile="true"/>
      <blocker type="sun.nio.ch.Interruptible" visibility="private" volatile="true"/>
      <blockerLock type="java.lang.Object" visibility="private" final="true"/>
      <MIN_PRIORITY type="int" visibility="public" final="true" static-final="true"/>
      <NORM_PRIORITY type="int" visibility="public" final="true" static-final="true"/>
      <MAX_PRIORITY type="int" visibility="public" final="true" static-final="true"/>
      <EMPTY_STACK_TRACE type="[Ljava.lang.StackTraceElement;" visibility="private" final="true" static-final="true"/>
      <SUBCLASS_IMPLEMENTATION_PERMISSION type="java.lang.RuntimePermission" visibility="private" final="true" static-final="true"/>
      <uncaughtExceptionHandler type="java.lang.Thread$UncaughtExceptionHandler" visibility="private" volatile="true"/>
      <defaultUncaughtExceptionHandler type="java.lang.Thread$UncaughtExceptionHandler" visibility="private" volatile="true" static-final="true"/>
   </fields>
   <methods>
      <run return-type="void" visibility="public"/>
      <exit return-type="void" visibility="private"/>
      <dispatchUncaughtException return-type="void" visibility="private">
         <parameters>
            <parameter parameter-type="java.lang.Throwable"/>
         </parameters>
      </dispatchUncaughtException>
      <toString return-type="java.lang.String" visibility="public" overrides="true"/>
      <clone return-type="java.lang.Object" visibility="protected">
         <throws>
            <throwable throws="java.lang.CloneNotSupportedException"/>
         </throws>
      </clone>
      <isInterrupted return-type="boolean" visibility="public"/>
      <isInterrupted return-type="boolean" visibility="private" native="true">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
      </isInterrupted>
      <currentThread return-type="java.lang.Thread" visibility="public" static-final="true" native="true"/>
      <registerNatives return-type="void" visibility="private" static-final="true" native="true"/>
      <getName return-type="java.lang.String" visibility="public" final="true"/>
      <start return-type="void" visibility="public" synchronized="true"/>
      <init return-type="void" visibility="private">
         <parameters>
            <parameter parameter-type="java.lang.ThreadGroup"/>
            <parameter parameter-type="java.lang.Runnable"/>
            <parameter parameter-type="java.lang.String"/>
            <parameter parameter-type="long"/>
         </parameters>
      </init>
      <getThreadGroup return-type="java.lang.ThreadGroup" visibility="public" final="true"/>
      <getStackTrace return-type="[Ljava.lang.StackTraceElement;" visibility="public"/>
      <holdsLock return-type="boolean" visibility="public" static-final="true" native="true">
         <parameters>
            <parameter parameter-type="java.lang.Object"/>
         </parameters>
      </holdsLock>
      <dumpStack return-type="void" visibility="public" static-final="true"/>
      <setPriority return-type="void" visibility="public" final="true">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </setPriority>
      <setDaemon return-type="void" visibility="public" final="true">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
      </setDaemon>
      <nextThreadNum return-type="int" visibility="private" static-final="true" synchronized="true"/>
      <nextThreadID return-type="long" visibility="private" static-final="true" synchronized="true"/>
      <blockedOn return-type="void">
         <parameters>
            <parameter parameter-type="sun.nio.ch.Interruptible"/>
         </parameters>
      </blockedOn>
      <yield return-type="void" visibility="public" static-final="true" native="true"/>
      <sleep return-type="void" visibility="public" static-final="true" native="true">
         <parameters>
            <parameter parameter-type="long"/>
         </parameters>
         <throws>
            <throwable throws="java.lang.InterruptedException"/>
         </throws>
      </sleep>
      <sleep return-type="void" visibility="public" static-final="true">
         <parameters>
            <parameter parameter-type="long"/>
            <parameter parameter-type="int"/>
         </parameters>
         <throws>
            <throwable throws="java.lang.InterruptedException"/>
         </throws>
      </sleep>
      <start0 return-type="void" visibility="private" native="true"/>
      <stop return-type="void" visibility="public" final="true"/>
      <stop return-type="void" visibility="public" final="true" synchronized="true">
         <parameters>
            <parameter parameter-type="java.lang.Throwable"/>
         </parameters>
      </stop>
      <interrupt return-type="void" visibility="public"/>
      <interrupted return-type="boolean" visibility="public" static-final="true"/>
      <destroy return-type="void" visibility="public"/>
      <isAlive return-type="boolean" visibility="public" final="true" native="true"/>
      <suspend return-type="void" visibility="public" final="true"/>
      <resume return-type="void" visibility="public" final="true"/>
      <getPriority return-type="int" visibility="public" final="true"/>
      <setName return-type="void" visibility="public" final="true">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </setName>
      <activeCount return-type="int" visibility="public" static-final="true"/>
      <enumerate return-type="int" visibility="public" static-final="true">
         <parameters>
            <parameter parameter-type="[Ljava.lang.Thread;"/>
         </parameters>
      </enumerate>
      <countStackFrames return-type="int" visibility="public" native="true"/>
      <join return-type="void" visibility="public" final="true" synchronized="true">
         <parameters>
            <parameter parameter-type="long"/>
            <parameter parameter-type="int"/>
         </parameters>
         <throws>
            <throwable throws="java.lang.InterruptedException"/>
         </throws>
      </join>
      <join return-type="void" visibility="public" final="true">
         <throws>
            <throwable throws="java.lang.InterruptedException"/>
         </throws>
      </join>
      <join return-type="void" visibility="public" final="true" synchronized="true">
         <parameters>
            <parameter parameter-type="long"/>
         </parameters>
         <throws>
            <throwable throws="java.lang.InterruptedException"/>
         </throws>
      </join>
      <isDaemon return-type="boolean" visibility="public" final="true"/>
      <checkAccess return-type="void" visibility="public" final="true"/>
      <getContextClassLoader return-type="java.lang.ClassLoader" visibility="public"/>
      <setContextClassLoader return-type="void" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.ClassLoader"/>
         </parameters>
      </setContextClassLoader>
      <getAllStackTraces return-type="java.util.Map" visibility="public" static-final="true"/>
      <isCCLOverridden return-type="boolean" visibility="private" static-final="true">
         <parameters>
            <parameter parameter-type="java.lang.Class"/>
         </parameters>
      </isCCLOverridden>
      <auditSubclass return-type="boolean" visibility="private" static-final="true">
         <parameters>
            <parameter parameter-type="java.lang.Class"/>
         </parameters>
      </auditSubclass>
      <dumpThreads return-type="[[Ljava.lang.StackTraceElement;" visibility="private" static-final="true" native="true">
         <parameters>
            <parameter parameter-type="[Ljava.lang.Thread;"/>
         </parameters>
      </dumpThreads>
      <getThreads return-type="[Ljava.lang.Thread;" visibility="private" static-final="true" native="true"/>
      <getId return-type="long" visibility="public"/>
      <getState return-type="java.lang.Thread$State" visibility="public"/>
      <setDefaultUncaughtExceptionHandler return-type="void" visibility="public" static-final="true">
         <parameters>
            <parameter parameter-type="java.lang.Thread$UncaughtExceptionHandler"/>
         </parameters>
      </setDefaultUncaughtExceptionHandler>
      <getDefaultUncaughtExceptionHandler return-type="java.lang.Thread$UncaughtExceptionHandler" visibility="public" static-final="true"/>
      <getUncaughtExceptionHandler return-type="java.lang.Thread$UncaughtExceptionHandler" visibility="public"/>
      <setUncaughtExceptionHandler return-type="void" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.Thread$UncaughtExceptionHandler"/>
         </parameters>
      </setUncaughtExceptionHandler>
      <processQueue return-type="void" static-final="true">
         <parameters>
            <parameter parameter-type="java.lang.ref.ReferenceQueue"/>
            <parameter parameter-type="java.util.concurrent.ConcurrentMap"/>
         </parameters>
      </processQueue>
      <setPriority0 return-type="void" visibility="private" native="true">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </setPriority0>
      <stop0 return-type="void" visibility="private" native="true">
         <parameters>
            <parameter parameter-type="java.lang.Object"/>
         </parameters>
      </stop0>
      <suspend0 return-type="void" visibility="private" native="true"/>
      <resume0 return-type="void" visibility="private" native="true"/>
      <interrupt0 return-type="void" visibility="private" native="true"/>
      <setNativeName return-type="void" visibility="private" native="true">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </setNativeName>
   </methods>
</Thread>