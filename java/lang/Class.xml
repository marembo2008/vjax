<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<Class class="java.lang.Class" ref-id="345284700">
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/reflect/AnnotatedElement.xml"/>
   <implements interface="java.lang.reflect.AnnotatedElement"/>
   <implements interface="java.lang.reflect.Type"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/reflect/GenericDeclaration.xml"/>
   <implements interface="java.lang.reflect.GenericDeclaration"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/Serializable.xml"/>
   <implements interface="java.io.Serializable"/>
   <extends class="java.lang.Object"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/annotation/Annotation.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/util/Collection.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/util/Set.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/net/URL.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/InputStream.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/NoSuchMethodException.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/NoSuchFieldException.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/reflect/Field.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/SecurityException.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Class$EnclosingMethodInfo.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/reflect/Method.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Package.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/reflect/Type.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/ClassNotFoundException.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/ClassLoader.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/IllegalAccessException.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/InstantiationException.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Object.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/ClassValue$ClassValueMap.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/util/Map.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/ref/SoftReference.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/security/ProtectionDomain.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/String.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Class.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/reflect/Constructor.xml"/>
   <constructors>
      <constructor visibility="private"/>
   </constructors>
   <fields>
      <ANNOTATION type="int" visibility="private" final="true" static-final="true"/>
      <ENUM type="int" visibility="private" final="true" static-final="true"/>
      <SYNTHETIC type="int" visibility="private" final="true" static-final="true"/>
      <cachedConstructor type="java.lang.reflect.Constructor" visibility="private" transient="true" volatile="true"/>
      <newInstanceCallerCache type="java.lang.Class" visibility="private" transient="true" volatile="true"/>
      <name type="java.lang.String" visibility="private" transient="true"/>
      <allPermDomain type="java.security.ProtectionDomain" visibility="private" static-final="true"/>
      <useCaches type="boolean" visibility="private" static-final="true"/>
      <declaredFields type="java.lang.ref.SoftReference" visibility="private" transient="true" volatile="true"/>
      <publicFields type="java.lang.ref.SoftReference" visibility="private" transient="true" volatile="true"/>
      <declaredMethods type="java.lang.ref.SoftReference" visibility="private" transient="true" volatile="true"/>
      <publicMethods type="java.lang.ref.SoftReference" visibility="private" transient="true" volatile="true"/>
      <declaredConstructors type="java.lang.ref.SoftReference" visibility="private" transient="true" volatile="true"/>
      <publicConstructors type="java.lang.ref.SoftReference" visibility="private" transient="true" volatile="true"/>
      <declaredPublicFields type="java.lang.ref.SoftReference" visibility="private" transient="true" volatile="true"/>
      <declaredPublicMethods type="java.lang.ref.SoftReference" visibility="private" transient="true" volatile="true"/>
      <classRedefinedCount type="int" visibility="private" transient="true" volatile="true"/>
      <lastRedefinedCount type="int" visibility="private" transient="true" volatile="true"/>
      <genericInfo type="sun.reflect.generics.repository.ClassRepository" visibility="private" transient="true"/>
      <serialVersionUID type="long" visibility="private" final="true" static-final="true"/>
      <serialPersistentFields type="[Ljava.io.ObjectStreamField;" visibility="private" final="true" static-final="true"/>
      <reflectionFactory type="sun.reflect.ReflectionFactory" visibility="private" static-final="true"/>
      <initted type="boolean" visibility="private" static-final="true"/>
      <enumConstants type="[Ljava.lang.Object;" visibility="private" transient="true" volatile="true"/>
      <enumConstantDirectory type="java.util.Map" visibility="private" transient="true" volatile="true"/>
      <annotations type="java.util.Map" visibility="private" transient="true"/>
      <declaredAnnotations type="java.util.Map" visibility="private" transient="true"/>
      <annotationType type="sun.reflect.annotation.AnnotationType" visibility="private"/>
      <classValueMap type="java.lang.ClassValue$ClassValueMap" transient="true"/>
   </fields>
   <methods>
      <newInstance0 return-type="java.lang.Object" visibility="private">
         <throws>
            <throwable throws="java.lang.InstantiationException"/>
            <throwable throws="java.lang.IllegalAccessException"/>
         </throws>
      </newInstance0>
      <forName return-type="java.lang.Class" visibility="public" static-final="true">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
            <parameter parameter-type="boolean"/>
            <parameter parameter-type="java.lang.ClassLoader"/>
         </parameters>
         <throws>
            <throwable throws="java.lang.ClassNotFoundException"/>
         </throws>
      </forName>
      <forName return-type="java.lang.Class" visibility="public" static-final="true">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
         <throws>
            <throwable throws="java.lang.ClassNotFoundException"/>
         </throws>
      </forName>
      <forName0 return-type="java.lang.Class" visibility="private" static-final="true" native="true">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
            <parameter parameter-type="boolean"/>
            <parameter parameter-type="java.lang.ClassLoader"/>
         </parameters>
         <throws>
            <throwable throws="java.lang.ClassNotFoundException"/>
         </throws>
      </forName0>
      <toString return-type="java.lang.String" visibility="public" overrides="true"/>
      <isAssignableFrom return-type="boolean" visibility="public" native="true">
         <parameters>
            <parameter parameter-type="java.lang.Class"/>
         </parameters>
      </isAssignableFrom>
      <isInstance return-type="boolean" visibility="public" native="true">
         <parameters>
            <parameter parameter-type="java.lang.Object"/>
         </parameters>
      </isInstance>
      <getModifiers return-type="int" visibility="public" native="true"/>
      <isInterface return-type="boolean" visibility="public" native="true"/>
      <isArray return-type="boolean" visibility="public" native="true"/>
      <isPrimitive return-type="boolean" visibility="public" native="true"/>
      <getSuperclass return-type="java.lang.Class" visibility="public" native="true"/>
      <getComponentType return-type="java.lang.Class" visibility="public" native="true"/>
      <registerNatives return-type="void" visibility="private" static-final="true" native="true"/>
      <getName return-type="java.lang.String" visibility="public"/>
      <enumConstantDirectory return-type="java.util.Map"/>
      <newInstance return-type="java.lang.Object" visibility="public">
         <throws>
            <throwable throws="java.lang.InstantiationException"/>
            <throwable throws="java.lang.IllegalAccessException"/>
         </throws>
      </newInstance>
      <isAnnotation return-type="boolean" visibility="public"/>
      <isSynthetic return-type="boolean" visibility="public"/>
      <getName0 return-type="java.lang.String" visibility="private" native="true"/>
      <getClassLoader return-type="java.lang.ClassLoader" visibility="public"/>
      <getClassLoader0 return-type="java.lang.ClassLoader" native="true"/>
      <getTypeParameters return-type="[Ljava.lang.reflect.TypeVariable;" visibility="public"/>
      <getGenericSuperclass return-type="java.lang.reflect.Type" visibility="public"/>
      <getPackage return-type="java.lang.Package" visibility="public"/>
      <getInterfaces return-type="[Ljava.lang.Class;" visibility="public" native="true"/>
      <getGenericInterfaces return-type="[Ljava.lang.reflect.Type;" visibility="public"/>
      <getSigners return-type="[Ljava.lang.Object;" visibility="public" native="true"/>
      <setSigners return-type="void" native="true">
         <parameters>
            <parameter parameter-type="[Ljava.lang.Object;"/>
         </parameters>
      </setSigners>
      <getEnclosingMethod return-type="java.lang.reflect.Method" visibility="public"/>
      <getEnclosingMethod0 return-type="[Ljava.lang.Object;" visibility="private" native="true"/>
      <getEnclosingMethodInfo return-type="java.lang.Class$EnclosingMethodInfo" visibility="private"/>
      <toClass return-type="java.lang.Class" visibility="private" static-final="true">
         <parameters>
            <parameter parameter-type="java.lang.reflect.Type"/>
         </parameters>
      </toClass>
      <getEnclosingConstructor return-type="java.lang.reflect.Constructor" visibility="public"/>
      <getDeclaringClass return-type="java.lang.Class" visibility="public" native="true"/>
      <getEnclosingClass return-type="java.lang.Class" visibility="public"/>
      <getSimpleName return-type="java.lang.String" visibility="public"/>
      <isAsciiDigit return-type="boolean" visibility="private" static-final="true">
         <parameters>
            <parameter parameter-type="char"/>
         </parameters>
      </isAsciiDigit>
      <getCanonicalName return-type="java.lang.String" visibility="public"/>
      <isAnonymousClass return-type="boolean" visibility="public"/>
      <isLocalClass return-type="boolean" visibility="public"/>
      <isMemberClass return-type="boolean" visibility="public"/>
      <getSimpleBinaryName return-type="java.lang.String" visibility="private"/>
      <isLocalOrAnonymousClass return-type="boolean" visibility="private"/>
      <getClasses return-type="[Ljava.lang.Class;" visibility="public"/>
      <getFields return-type="[Ljava.lang.reflect.Field;" visibility="public">
         <throws>
            <throwable throws="java.lang.SecurityException"/>
         </throws>
      </getFields>
      <getMethods return-type="[Ljava.lang.reflect.Method;" visibility="public">
         <throws>
            <throwable throws="java.lang.SecurityException"/>
         </throws>
      </getMethods>
      <getConstructors return-type="[Ljava.lang.reflect.Constructor;" visibility="public">
         <throws>
            <throwable throws="java.lang.SecurityException"/>
         </throws>
      </getConstructors>
      <getField return-type="java.lang.reflect.Field" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
         <throws>
            <throwable throws="java.lang.NoSuchFieldException"/>
            <throwable throws="java.lang.SecurityException"/>
         </throws>
      </getField>
      <getMethod return-type="java.lang.reflect.Method" visibility="public" transient="true">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
            <parameter parameter-type="[Ljava.lang.Class;"/>
         </parameters>
         <throws>
            <throwable throws="java.lang.NoSuchMethodException"/>
            <throwable throws="java.lang.SecurityException"/>
         </throws>
      </getMethod>
      <getConstructor return-type="java.lang.reflect.Constructor" visibility="public" transient="true">
         <parameters>
            <parameter parameter-type="[Ljava.lang.Class;"/>
         </parameters>
         <throws>
            <throwable throws="java.lang.NoSuchMethodException"/>
            <throwable throws="java.lang.SecurityException"/>
         </throws>
      </getConstructor>
      <getDeclaredClasses return-type="[Ljava.lang.Class;" visibility="public">
         <throws>
            <throwable throws="java.lang.SecurityException"/>
         </throws>
      </getDeclaredClasses>
      <getDeclaredFields return-type="[Ljava.lang.reflect.Field;" visibility="public">
         <throws>
            <throwable throws="java.lang.SecurityException"/>
         </throws>
      </getDeclaredFields>
      <getDeclaredMethods return-type="[Ljava.lang.reflect.Method;" visibility="public">
         <throws>
            <throwable throws="java.lang.SecurityException"/>
         </throws>
      </getDeclaredMethods>
      <getDeclaredConstructors return-type="[Ljava.lang.reflect.Constructor;" visibility="public">
         <throws>
            <throwable throws="java.lang.SecurityException"/>
         </throws>
      </getDeclaredConstructors>
      <getDeclaredField return-type="java.lang.reflect.Field" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
         <throws>
            <throwable throws="java.lang.NoSuchFieldException"/>
            <throwable throws="java.lang.SecurityException"/>
         </throws>
      </getDeclaredField>
      <getDeclaredMethod return-type="java.lang.reflect.Method" visibility="public" transient="true">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
            <parameter parameter-type="[Ljava.lang.Class;"/>
         </parameters>
         <throws>
            <throwable throws="java.lang.NoSuchMethodException"/>
            <throwable throws="java.lang.SecurityException"/>
         </throws>
      </getDeclaredMethod>
      <getDeclaredConstructor return-type="java.lang.reflect.Constructor" visibility="public" transient="true">
         <parameters>
            <parameter parameter-type="[Ljava.lang.Class;"/>
         </parameters>
         <throws>
            <throwable throws="java.lang.NoSuchMethodException"/>
            <throwable throws="java.lang.SecurityException"/>
         </throws>
      </getDeclaredConstructor>
      <getResourceAsStream return-type="java.io.InputStream" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </getResourceAsStream>
      <getResource return-type="java.net.URL" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </getResource>
      <getProtectionDomain return-type="java.security.ProtectionDomain" visibility="public"/>
      <getProtectionDomain0 return-type="java.security.ProtectionDomain" visibility="private" native="true"/>
      <setProtectionDomain0 return-type="void" native="true">
         <parameters>
            <parameter parameter-type="java.security.ProtectionDomain"/>
         </parameters>
      </setProtectionDomain0>
      <getPrimitiveClass return-type="java.lang.Class" static-final="true" native="true">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </getPrimitiveClass>
      <checkMemberAccess return-type="void" visibility="private">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="java.lang.ClassLoader"/>
            <parameter parameter-type="boolean"/>
         </parameters>
      </checkMemberAccess>
      <resolveName return-type="java.lang.String" visibility="private">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </resolveName>
      <clearCachesOnClassRedefinition return-type="void" visibility="private"/>
      <getGenericSignature return-type="java.lang.String" visibility="private" native="true"/>
      <getFactory return-type="sun.reflect.generics.factory.GenericsFactory" visibility="private"/>
      <getGenericInfo return-type="sun.reflect.generics.repository.ClassRepository" visibility="private"/>
      <getRawAnnotations return-type="[B" visibility="private" native="true"/>
      <getConstantPool return-type="sun.reflect.ConstantPool" native="true"/>
      <privateGetDeclaredFields return-type="[Ljava.lang.reflect.Field;" visibility="private">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
      </privateGetDeclaredFields>
      <privateGetPublicFields return-type="[Ljava.lang.reflect.Field;" visibility="private">
         <parameters>
            <parameter parameter-type="java.util.Set"/>
         </parameters>
      </privateGetPublicFields>
      <addAll return-type="void" visibility="private" static-final="true">
         <parameters>
            <parameter parameter-type="java.util.Collection"/>
            <parameter parameter-type="[Ljava.lang.reflect.Field;"/>
         </parameters>
      </addAll>
      <privateGetDeclaredConstructors return-type="[Ljava.lang.reflect.Constructor;" visibility="private">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
      </privateGetDeclaredConstructors>
      <privateGetDeclaredMethods return-type="[Ljava.lang.reflect.Method;" visibility="private">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
      </privateGetDeclaredMethods>
      <privateGetPublicMethods return-type="[Ljava.lang.reflect.Method;" visibility="private"/>
      <searchFields return-type="java.lang.reflect.Field" visibility="private">
         <parameters>
            <parameter parameter-type="[Ljava.lang.reflect.Field;"/>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </searchFields>
      <getField0 return-type="java.lang.reflect.Field" visibility="private">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
         <throws>
            <throwable throws="java.lang.NoSuchFieldException"/>
         </throws>
      </getField0>
      <searchMethods return-type="java.lang.reflect.Method" visibility="private" static-final="true">
         <parameters>
            <parameter parameter-type="[Ljava.lang.reflect.Method;"/>
            <parameter parameter-type="java.lang.String"/>
            <parameter parameter-type="[Ljava.lang.Class;"/>
         </parameters>
      </searchMethods>
      <getMethod0 return-type="java.lang.reflect.Method" visibility="private">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
            <parameter parameter-type="[Ljava.lang.Class;"/>
         </parameters>
      </getMethod0>
      <getConstructor0 return-type="java.lang.reflect.Constructor" visibility="private">
         <parameters>
            <parameter parameter-type="[Ljava.lang.Class;"/>
            <parameter parameter-type="int"/>
         </parameters>
         <throws>
            <throwable throws="java.lang.NoSuchMethodException"/>
         </throws>
      </getConstructor0>
      <arrayContentsEq return-type="boolean" visibility="private" static-final="true">
         <parameters>
            <parameter parameter-type="[Ljava.lang.Object;"/>
            <parameter parameter-type="[Ljava.lang.Object;"/>
         </parameters>
      </arrayContentsEq>
      <copyFields return-type="[Ljava.lang.reflect.Field;" visibility="private" static-final="true">
         <parameters>
            <parameter parameter-type="[Ljava.lang.reflect.Field;"/>
         </parameters>
      </copyFields>
      <copyMethods return-type="[Ljava.lang.reflect.Method;" visibility="private" static-final="true">
         <parameters>
            <parameter parameter-type="[Ljava.lang.reflect.Method;"/>
         </parameters>
      </copyMethods>
      <copyConstructors return-type="[Ljava.lang.reflect.Constructor;" visibility="private" static-final="true">
         <parameters>
            <parameter parameter-type="[Ljava.lang.reflect.Constructor;"/>
         </parameters>
      </copyConstructors>
      <getDeclaredFields0 return-type="[Ljava.lang.reflect.Field;" visibility="private" native="true">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
      </getDeclaredFields0>
      <getDeclaredMethods0 return-type="[Ljava.lang.reflect.Method;" visibility="private" native="true">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
      </getDeclaredMethods0>
      <getDeclaredConstructors0 return-type="[Ljava.lang.reflect.Constructor;" visibility="private" native="true">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
      </getDeclaredConstructors0>
      <getDeclaredClasses0 return-type="[Ljava.lang.Class;" visibility="private" native="true"/>
      <argumentTypesToString return-type="java.lang.String" visibility="private" static-final="true">
         <parameters>
            <parameter parameter-type="[Ljava.lang.Class;"/>
         </parameters>
      </argumentTypesToString>
      <desiredAssertionStatus return-type="boolean" visibility="public"/>
      <desiredAssertionStatus0 return-type="boolean" visibility="private" static-final="true" native="true">
         <parameters>
            <parameter parameter-type="java.lang.Class"/>
         </parameters>
      </desiredAssertionStatus0>
      <isEnum return-type="boolean" visibility="public"/>
      <getReflectionFactory return-type="sun.reflect.ReflectionFactory" visibility="private" static-final="true"/>
      <checkInitted return-type="void" visibility="private" static-final="true"/>
      <getEnumConstants return-type="[Ljava.lang.Object;" visibility="public"/>
      <getEnumConstantsShared return-type="[Ljava.lang.Object;"/>
      <cast return-type="java.lang.Object" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.Object"/>
         </parameters>
      </cast>
      <cannotCastMsg return-type="java.lang.String" visibility="private">
         <parameters>
            <parameter parameter-type="java.lang.Object"/>
         </parameters>
      </cannotCastMsg>
      <asSubclass return-type="java.lang.Class" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.Class"/>
         </parameters>
      </asSubclass>
      <getAnnotation return-type="java.lang.annotation.Annotation" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.Class"/>
         </parameters>
      </getAnnotation>
      <isAnnotationPresent return-type="boolean" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.Class"/>
         </parameters>
      </isAnnotationPresent>
      <getAnnotations return-type="[Ljava.lang.annotation.Annotation;" visibility="public"/>
      <getDeclaredAnnotations return-type="[Ljava.lang.annotation.Annotation;" visibility="public"/>
      <initAnnotationsIfNecessary return-type="void" visibility="private" synchronized="true"/>
      <setAnnotationType return-type="void">
         <parameters>
            <parameter parameter-type="sun.reflect.annotation.AnnotationType"/>
         </parameters>
      </setAnnotationType>
      <getAnnotationType return-type="sun.reflect.annotation.AnnotationType"/>
      <access_100 escapeSequence="6:$" return-type="boolean" static-final="true">
         <parameters>
            <parameter parameter-type="[Ljava.lang.Object;"/>
            <parameter parameter-type="[Ljava.lang.Object;"/>
         </parameters>
      </access_100>
      <access_202 escapeSequence="6:$" return-type="boolean" static-final="true">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
      </access_202>
      <access_302 escapeSequence="6:$" return-type="boolean" static-final="true">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
      </access_302>
   </methods>
</Class>