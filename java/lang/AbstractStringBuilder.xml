<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<AbstractStringBuilder class="java.lang.AbstractStringBuilder" ref-id="2044727867" abstract="true">
   <implements interface="java.lang.CharSequence"/>
   <implements interface="java.lang.Appendable"/>
   <extends class="java.lang.Object"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Object.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/io/IOException.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/Appendable.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/CharSequence.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/StringBuffer.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/AbstractStringBuilder.xml"/>
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="java/lang/String.xml"/>
   <constructors>
      <constructor/>
   </constructors>
   <fields>
      <value type="[C"/>
      <count type="int"/>
   </fields>
   <methods>
      <toString return-type="java.lang.String" visibility="public" abstract="true" overrides="true"/>
      <append return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="[C"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </append>
      <append return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="[C"/>
         </parameters>
      </append>
      <append return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="boolean"/>
         </parameters>
      </append>
      <append return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="char"/>
         </parameters>
      </append>
      <append return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </append>
      <append return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.StringBuffer"/>
         </parameters>
      </append>
      <append return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.CharSequence"/>
         </parameters>
      </append>
      <append return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.CharSequence"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </append>
      <append return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="double"/>
         </parameters>
      </append>
      <append return-type="java.lang.Appendable" visibility="public" volatile="true">
         <parameters>
            <parameter parameter-type="java.lang.CharSequence"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </append>
      <append return-type="java.lang.Appendable" visibility="public" volatile="true">
         <parameters>
            <parameter parameter-type="char"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </append>
      <append return-type="java.lang.Appendable" visibility="public" volatile="true">
         <parameters>
            <parameter parameter-type="java.lang.CharSequence"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
         <throws>
            <throwable throws="java.io.IOException"/>
         </throws>
      </append>
      <append return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="float"/>
         </parameters>
      </append>
      <append return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="long"/>
         </parameters>
      </append>
      <append return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </append>
      <append return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.Object"/>
         </parameters>
      </append>
      <indexOf return-type="int" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
            <parameter parameter-type="int"/>
         </parameters>
      </indexOf>
      <indexOf return-type="int" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </indexOf>
      <codePointAt return-type="int" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </codePointAt>
      <codePointBefore return-type="int" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </codePointBefore>
      <length return-type="int" visibility="public"/>
      <charAt return-type="char" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </charAt>
      <codePointCount return-type="int" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </codePointCount>
      <offsetByCodePoints return-type="int" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </offsetByCodePoints>
      <getChars return-type="void" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="[C"/>
            <parameter parameter-type="int"/>
         </parameters>
      </getChars>
      <lastIndexOf return-type="int" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
            <parameter parameter-type="int"/>
         </parameters>
      </lastIndexOf>
      <lastIndexOf return-type="int" visibility="public">
         <parameters>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </lastIndexOf>
      <substring return-type="java.lang.String" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </substring>
      <substring return-type="java.lang.String" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </substring>
      <subSequence return-type="java.lang.CharSequence" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </subSequence>
      <replace return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </replace>
      <getValue return-type="[C" final="true"/>
      <capacity return-type="int" visibility="public"/>
      <ensureCapacityInternal return-type="void" visibility="private">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </ensureCapacityInternal>
      <ensureCapacity return-type="void" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </ensureCapacity>
      <trimToSize return-type="void" visibility="public"/>
      <setLength return-type="void" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </setLength>
      <setCharAt return-type="void" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="char"/>
         </parameters>
      </setCharAt>
      <appendCodePoint return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </appendCodePoint>
      <delete return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </delete>
      <deleteCharAt return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </deleteCharAt>
      <insert return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="java.lang.CharSequence"/>
         </parameters>
      </insert>
      <insert return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="[C"/>
         </parameters>
      </insert>
      <insert return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="java.lang.Object"/>
         </parameters>
      </insert>
      <insert return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="[C"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </insert>
      <insert return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="java.lang.String"/>
         </parameters>
      </insert>
      <insert return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="long"/>
         </parameters>
      </insert>
      <insert return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </insert>
      <insert return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="char"/>
         </parameters>
      </insert>
      <insert return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="boolean"/>
         </parameters>
      </insert>
      <insert return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="java.lang.CharSequence"/>
            <parameter parameter-type="int"/>
            <parameter parameter-type="int"/>
         </parameters>
      </insert>
      <insert return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="float"/>
         </parameters>
      </insert>
      <insert return-type="java.lang.AbstractStringBuilder" visibility="public">
         <parameters>
            <parameter parameter-type="int"/>
            <parameter parameter-type="double"/>
         </parameters>
      </insert>
      <reverse return-type="java.lang.AbstractStringBuilder" visibility="public"/>
      <expandCapacity return-type="void">
         <parameters>
            <parameter parameter-type="int"/>
         </parameters>
      </expandCapacity>
   </methods>
</AbstractStringBuilder>